# ワークフロー定義の開始
main:
    steps:
    # 初期設定ステップ
    - init:
        assign:
            - repository: projects/${PROJECT_ID}/locations/${REPOSITORY_LOCATION}/repositories/${REPOSITORY_ID}
            - files: ${files}
            - tables: ${tables}
    # Cloud Function unzipの実行ステップ
    - callUnzipFunction:
        call: http.get
        args:
            url: "${UNZIP_FUNCTION_URL}?bucket_name=${UNZIP_BUCKET}&zip_encodig=${UNZIP_ENCODING}"
            auth:
                type: OIDC
                audience: "${UNZIP_FUNCTION_URL}"
    # Cloud Function データクレンジングの実行ステップ
    - callCleansingFunction:
        parallel:
            for:
                value: file_name
                in: ${val_files}
                steps:
                    - cleaningfile:
                        call: http.get
                        args:
                            url: ${dollar}{"${CLEANSING_FUNCTION_URL}?bucket_name=${UNZIP_BUCKET}&file_name="+file_name+"&file_encoding=${FILE_ENCODING}"}
                            auth:
                                type: OIDC
                                audience: "${CLEANSING_FUNCTION_URL}"
    # Cloud Function import_csv_to_bqの実行ステップ
    - callImportCsvToBqFunction:
        parallel:
            for:
                value: target_table
                in: ${val_tables}
                steps:
                    - importCsvToBq:
                        call: http.get
                        args:
                            url: ${dollar}{"${CLOUD_FUNCTION_ENDPOINT_URL}?target_table="+target_table}
                            auth:
                                type: OIDC
                                audience: "${CLOUD_FUNCTION_ENDPOINT_URL}"
    # Dataform のコンパイル処理
    #TODO: Dataform実装後に呼び出しできるかの確認
    - createCompilationResult:
        call: http.post
        args:
            url: "https://dataform.googleapis.com/v1beta1/projects/${PROJECT_ID}/locations/${REPOSITORY_LOCATION}/repositories/${REPOSITORY_ID}/compilationResults"
            body:
                gitCommitish: GIT_COMMITISH
        result: compilationResult

    # Dataform ワークフローの実行処理
    #TODO: Dataform実装後に呼び出しできるかの確認
    - createWorkflowInvocation:
        call: http.post
        args:
            url: "https://dataform.googleapis.com/v1beta1/projects/${PROJECT_ID}/locations/${REPOSITORY_LOCATION}/repositories/${REPOSITORY_ID}/workflowInvocations"
            body:
                compilationResult: "$${compilationResult.body.name}"